# Generated by Django 5.2 on 2025-05-03 02:47

import core.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ativo', models.BooleanField(default=True)),
                ('ra', models.CharField(help_text='Formato: 0000 + 9 dígitos + 1 dígito/X', max_length=14, unique=True, validators=[core.models.validate_ra])),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('quilombola', models.BooleanField(default=False, verbose_name='Quilombola')),
            ],
        ),
        migrations.CreateModel(
            name='Bimestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('ano_letivo', models.IntegerField()),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
                ('dias_letivo', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_usuario', models.CharField(max_length=50, unique=True, verbose_name='Nome de usuário')),
                ('senha', models.CharField(help_text='Em produção, use django.contrib.auth para gerenciar senhas.', max_length=128, verbose_name='Senha')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome completo')),
                ('cpf', models.CharField(default='000.000.000-00', max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message="O CPF deve estar no formato: '123.456.789-00'.", regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('sexo', models.CharField(blank=True, choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=10, null=True, verbose_name='Sexo')),
                ('endereco', models.CharField(max_length=200, verbose_name='Endereço')),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="O telefone deve estar no formato: '(XX) XXXXX-XXXX' ou 'XX XXXXX-XXXX'.", regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
            ],
        ),
        migrations.CreateModel(
            name='DiretoriaEnsino',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Núcleo educacional')),
                ('endereco', models.CharField(blank=True, max_length=200, null=True, verbose_name='Endereço')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="O telefone deve estar no formato: '(XX) XXXXX-XXXX' ou 'XX XXXXX-XXXX'.", regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
                ('criado_em', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Diretoria de Ensino',
                'verbose_name_plural': 'Diretorias de Ensino',
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Aviso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('data_publicacao', models.DateTimeField(auto_now_add=True)),
                ('autor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Boletim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='Calendario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.CharField(max_length=20)),
                ('dia', models.IntegerField()),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'unique_together': {('mes', 'dia')},
            },
        ),
        migrations.CreateModel(
            name='Diretor',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.usuario')),
            ],
            options={
                'verbose_name': 'Diretor',
                'verbose_name_plural': 'Diretores',
                'ordering': ['nome'],
            },
            bases=('core.usuario',),
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, verbose_name='Nome')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('diretoria_ensino', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.diretoriaensino', verbose_name='Diretoria Regional de Ensino')),
                ('diretor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.diretor', verbose_name='Diretor Responsável')),
            ],
        ),
        migrations.CreateModel(
            name='PeriodoLetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('ANUAL', 'Anual'), ('SEMESTRAL', 'Semestral'), ('TRIMESTRAL', 'Trimestral'), ('BIMESTRAL', 'Bimestral')], max_length=10, verbose_name='Tipo')),
                ('ano', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900, message='O ano deve ser maior ou igual a 1900.'), django.core.validators.MaxValueValidator(2100, message='O ano deve ser menor ou igual a 2100.')], verbose_name='Ano')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Período Letivo',
                'verbose_name_plural': 'Períodos Letivos',
                'ordering': ['-ano', 'data_inicio'],
                'indexes': [models.Index(fields=['tipo', 'ano', 'ativo'], name='core_period_tipo_d86349_idx'), models.Index(fields=['ano', 'data_inicio'], name='core_period_ano_d9b726_idx')],
                'constraints': [models.UniqueConstraint(fields=('ano',), name='unique_periodo_letivo_por_ano')],
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ano', models.PositiveIntegerField(help_text='Ano letivo da turma', verbose_name='Ano')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='core.escola')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message="O CPF deve estar no formato: '123.456.789-00'.", regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=10)),
                ('endereco', models.CharField(max_length=200)),
                ('telefone', models.CharField(max_length=20)),
                ('disciplinas', models.ManyToManyField(blank=True, help_text='Selecione as disciplinas que o professor leciona.', related_name='professores_disciplina', to='core.disciplina', verbose_name='Disciplinas')),
                ('turmas', models.ManyToManyField(blank=True, help_text='Selecione as turmas que este professor leciona.', related_name='professores', to='core.turma', verbose_name='Turmas')),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.FloatField()),
                ('data_fechamento', models.DateField(blank=True, null=True)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='core.aluno')),
                ('bimestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bimestre')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.disciplina')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.turma')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliação',
            },
        ),
        migrations.AddField(
            model_name='aluno',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to='core.turma'),
        ),
        migrations.CreateModel(
            name='DiaLetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('status', models.CharField(choices=[('L', 'Dia Letivo'), ('F', 'Feriado Docente'), ('FE', 'Feriado'), ('R', 'Recesso'), ('PL', 'Planejamento'), ('AC', 'Atividades Cultural/Letivo'), ('SA', 'Suspensão de Atividades'), ('S', 'Sábado'), ('D', 'Domingo'), ('RPL', 'Replanejamento')], default='L', max_length=3)),
                ('periodo_letivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias_letivos', to='core.periodoletivo')),
            ],
            options={
                'verbose_name': 'Dia Letivo',
                'verbose_name_plural': 'Dias Letivos',
                'unique_together': {('periodo_letivo', 'data')},
            },
        ),
        migrations.CreateModel(
            name='Frequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data')),
                ('status', models.CharField(choices=[('presente', 'Presente'), ('ausente', 'Ausente'), ('justificado', 'Justificado'), ('nao_letivo', 'Dia Não Letivo')], max_length=20)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='core.aluno')),
                ('disciplina', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.disciplina')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='core.turma')),
            ],
            options={
                'verbose_name': 'Frequência',
                'verbose_name_plural': 'Frequências',
                'unique_together': {('aluno', 'data', 'disciplina')},
            },
        ),
    ]
